import com.yandex.div.gradle.FileExtensions

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    namespace 'com.yandex.divkit.perftests'

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId 'com.yandex.divkit.perftests'
        minSdkVersion 21
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName '1.0.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
}

dependencies {
    implementation project(path: ':div-data')

    implementation libs.androidx.coreKtx

    testImplementation libs.junit

    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation libs.androidx.test.uiautomator
}

task assemblePerfTests() {
    def outputPerfDir = "${rootProject.buildDir}/perf"
    def buildType = "debug"

    doLast {
        def copied = 0
        copy {
            from buildDir
            into outputPerfDir
            include "**/apk/**/divkit-perftests-${buildType}.apk"
            exclude "**/intermediates"
            eachFile { file ->
                file.path = "mock-app.apk"
                copied += 1
            }
            includeEmptyDirs = false
        }
        assert copied == 1 && file("$outputPerfDir/mock-app.apk").exists()

        copy {
            from buildDir
            into outputPerfDir
            include "**/apk/androidTest/**/divkit-perftests-$buildType-androidTest.apk"
            exclude "**/intermediates"
            eachFile { file ->
                file.path = "tests.apk"
                copied += 1
            }
            includeEmptyDirs = false
        }
        assert copied == 2 && file("$outputPerfDir/tests.apk").exists()
    }

    dependsOn("assembleDebug", "assembleDebugAndroidTest")
}

FileExtensions.ifExists("${project.projectDir}/build.internal.gradle") {
    apply from: it
}
