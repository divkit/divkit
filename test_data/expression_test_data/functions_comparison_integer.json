{
  "cases": [
    {
      "expression": "@{max()}",
      "expected": {
        "type": "error",
        "value": "Failed to evaluate [max()]. Function requires non empty argument list."
      },
      "platforms": [
        "web",
        "ios",
        "android"
      ]
    },
    {
      "expression": "@{max(-1)}",
      "expected": {
        "type": "integer",
        "value": -1
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{max(1, 2)}",
      "expected": {
        "type": "integer",
        "value": 2
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{max(10000000000, 20000000000)}",
      "expected": {
        "type": "integer",
        "value": 20000000000
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{max(-1, -2)}",
      "expected": {
        "type": "integer",
        "value": -1
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{max(0, 0)}",
      "expected": {
        "type": "integer",
        "value": 0
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{max(-1, 0, 1)}",
      "expected": {
        "type": "integer",
        "value": 1
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{max(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)}",
      "expected": {
        "type": "integer",
        "value": 10
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{min()}",
      "expected": {
        "type": "error",
        "value": "Failed to evaluate [min()]. Function requires non empty argument list."
      },
      "platforms": [
        "web",
        "ios",
        "android"
      ]
    },
    {
      "expression": "@{min(1)}",
      "expected": {
        "type": "integer",
        "value": 1
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{min(1, 2)}",
      "expected": {
        "type": "integer",
        "value": 1
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{min(10000000000, 20000000000)}",
      "expected": {
        "type": "integer",
        "value": 10000000000
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{min(-1, -2)}",
      "expected": {
        "type": "integer",
        "value": -2
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{min(0, 0)}",
      "expected": {
        "type": "integer",
        "value": 0
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{min(-1, 0, 1)}",
      "expected": {
        "type": "integer",
        "value": -1
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    },
    {
      "expression": "@{min(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)}",
      "expected": {
        "type": "integer",
        "value": 1
      },
      "platforms": [
        "android",
        "ios",
        "web"
      ]
    }
  ]
}
