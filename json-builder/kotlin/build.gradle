apply plugin: 'kotlin'

apply from: "$projectDir/ext.gradle"
apply from: "$projectDir/publish.gradle"

buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.21"
        classpath "io.github.gradle-nexus:publish-plugin:1.1.0"
    }
}

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs = ['-Xjvm-default=all']
            languageVersion = "1.9"
            apiVersion = "1.9"
        }
    }

    project.tasks.withType(PublishToMavenRepository) { task ->
        task.finalizedBy(reportBuildNumber)
    }

    project.tasks.withType(PublishToMavenLocal) { task ->
        task.finalizedBy(reportVersion)
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java.srcDirs += 'src/generated/kotlin'
    }
}

test {
    useJUnitPlatform()
}

def versions = [
    jackson: "2.16.0",
    jsonAssert: "1.5.1",
    junit5: "5.10.1",
    kotlin: "1.9.21"
]

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"

    implementation "com.fasterxml.jackson.core:jackson-annotations:$versions.jackson"
    implementation "com.fasterxml.jackson.core:jackson-databind:$versions.jackson"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$versions.jackson"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$versions.junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$versions.junit5"
    testImplementation "org.skyscreamer:jsonassert:$versions.jsonAssert"
}
